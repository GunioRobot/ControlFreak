#!/usr/bin/perl
use strict;
use warnings;

use Find::Lib './lib';
use Getopt::Long;
use AnyEvent();

use ControlFreak;
use Carp;
use Pod::Usage;
use Try::Tiny;

my %options;
GetOptions(
    "c|config=s" => \$options{config},
    "d|daemon"   => \$options{daemon},

    'h|help'     => \$options{help},
    'm|man'      => \$options{man},
);

pod2usage(1)             if $options{help};
pod2usage(-verbose => 2) if $options{man};

pod2usage("please provide a config file") unless $options{config};

croak "Config file doesn't exist" unless -e $options{config};
croak "Can't read config file"    unless -r $options{config};

my $ctrl = ControlFreak->new( config_file => $options{config} );

#try {
    $ctrl->load_config;
#} catch {
#    die "Fatal error while loading the config, see logs for details $!";
#};

if ($ctrl->console) {
    $ctrl->console->start;
}

## probably need to deal with signals
AnyEvent->condvar->recv;

__END__

=head1 NAME

cfk - the supervisor process for ControlFreak

=head1 SYNOPSIS

cfk [options]

Options:

 -c, --config=<file>  Path to a configuration file to use

 -d, --daemon         Run as a daemon
 -h, --help           Help
 -m, --man            More help

=head1 OPTIONS

Please see L<SYNOPSIS>.

=head1 DESCRIPTION

B<cfk> supervises other processes, making sure there are up or down
when you want to, and provides flexible logging facility for those
services.

=head1 SAMPLE CONFIG

  # management port
  console address = 127.0.0.1:11311
  console full = on # enable this only if you know what you are doing

  logger config = /etc/cfk/logger.conf

  service memcached cmd = /usr/bin/memcached -p 11211
  service memcached ignore_stderr = 1
  service memcached tags = prod
  service memcached-test cmd = /usr/bin/memcached -p 12221
  service memcached tags = test,optional
  service perlbal cmd = /usr/bin/perlbal -c /etc/perlbal.conf
  service perlbal tags = prod

  socket fcgisock address = "127.0.0.1:8080"
  socket fcgisock options = TBD

  ## webNNN share a common socket through their stdin
  service web001 cmd = /usr/bin/plackup -a /home/www/app.psgi -s FCGI
  service web001 pipe_stdin = fcgisock
  service web001 tags = prod,webs

  service web002 cmd = /usr/bin/plackup -a /home/www/app.psgi -s FCGI
  service web002 pipe_stdin = fcgisock
  service web002 tags = prod,webs

  # start random stuff
  command up svc memcached
  command up svc perlbal
  command down tag optional

  load /etc/cfk.d/*.conf
